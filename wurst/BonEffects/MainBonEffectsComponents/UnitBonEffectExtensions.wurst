package UnitBonEffectExtensions

import BonEffect

/**
Applys BonEffect to the unit
*/
public function unit.aplyBonEffect(BonEffect bon)
    bon.applyToUnit(this)

/**
Returns true if unit is under at least one stack of BonEffect.
Statuses with the same Buff Id are treated as the same Bon in terms of stackability.
*/
public function unit.isUnderBonEffect(BonEffect bon) returns boolean
    return bon.isUnitUnderBon(this)

/**
Returns stack count of specific BonEffect.
Statuses with the same Buff Id are treated as the same Bon in terms of stackability.
*/
public function unit.getBonEffectStackCount(BonEffect bon) returns int
    return bon.getStackCount(this)

/**
Removes BonEffect from unit (all of its stacks). 
It will trigger onDispelled Event but will not trigger onStackExpired nor onBonExpired.
Returns false when unit was not under BonEffect and there was nothng to be dispelled, true otherwise.
*/
public function unit.dispellBonEffect(BonEffect bon) returns boolean
    return bon.dispellBonEffect(this)

/**
Removes BonEffect from unit (all of its stacks). 
It will not trigger any BonEffect events.
Returns false when unit was not under BonEffect and there was nothng to be canceled, true otherwise.
*/
public function unit.cancelBonEffect(BonEffect bon) returns boolean
    return bon.cancelBonEffect(this)