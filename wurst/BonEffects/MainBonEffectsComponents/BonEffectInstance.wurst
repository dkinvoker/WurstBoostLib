package BonEffectInstance

import LinkedList
import BonusInstance
import BonEffect
import ClosureTimers
import BuffObjEditing

public class BonEffectInstance
    private LinkedList<BonusInstance> bonuses = new LinkedList<BonusInstance>()
    private BonEffect bonEffect
    private CallbackSingle endOfBonCallback

    construct(BonEffect bon, LinkedList<BonusInstance> bonuses)
        this.bonEffect = bon
        this.bonuses = bonuses

    function getBonEffect() returns BonEffect
        return this.bonEffect

    function bindEndOfBonCallback(CallbackSingle callback)
        this.endOfBonCallback = callback

    function dispell(unit u)
        for bonus in this.bonuses
            bonus.removeEffect(u)
        u.removeAbility(this.bonEffect.getBuff().abilId)
        this.abortCallback()

    function abortCallback()
        destroy this.endOfBonCallback

    ondestroy
        bonuses.forEach() (BonusInstance t) ->
            destroy t
        destroy bonuses