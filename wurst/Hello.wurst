package Hello

//MY OWN LIBLARY
import Statuses
import PowerCalculator

//FROM STANDARD LIBLARY
import ClosureEvents
import BuffObjEditing
import Assets

//Example of Simple Spell script
//This script adds an effect to a spell, which applys shield to caster.
//Status power is based on Hero Inteligence 

// Configurable value indicating how much Hero Inteligence influences Shield power. 
@configurable real shieldPowerIntRatio
// Shield duration
@configurable real shieldDuration

//Creting appropriate Buff GameObject in the editor at comiltetime for our spell
//Selecting Name, Desctription, Icon and visual effect.
//Name, Description and Icon do not requires explanation, but "Ability" does.
//"Buffs" Objects do not contain any effects by themselfs, there are just GameObject,
//that can be attached to the unit to display information about units state.
let MY_BUFF = compiletime(createDummyBuffObject(
	"Shield", 
	"This unit is shilded. Will not take any damage.", 
	Icons.bTNArmorGolem, 
	Abilities.manaShieldCaster))

//Power calculator
let powerCalculator = new PowerCalculator()
..setIntRatio(shieldPowerIntRatio)
..setBasePower(5)

init
	print("Hello World")

	//Creating a mage unit to test a spell
	let mage = createUnit(Player(0), 'H000', vec2(0, 0), angle(1))

	//Creates a Status (Collection of effects that can be applied to an unit).
	//Status can contain multiple effects (ex. Shield + MovementSpeedBonus etc.)
	let status = new Status()
	..setBuff(MY_BUFF)
	..setDuration(shieldDuration)
	..setStackability(StatusStackability.DO_NOT_STACK)

	//ShieldBonus that will be added to Status.
	//When shield is broaken whole Status should be canceled, otherwise visual effect will remain even after shield break. 
	//It would also prevent caster from geining another shield unless Status Expiries (DO_NOT_STACK option)
	let shieldBonus = new ShieldBonus(powerCalculator.calculatePower(mage))
	..onShieldBroaken() (unit bonusTarget) ->
		bonusTarget.cancelStatus(status)

	status.addEffect(shieldBonus)
	
	//Adding effect to a spell with certaing spell ID
	EventListener.onPointCast('A000') (unit caster, vec2 target) ->
		caster.aplyStatus(status)

	//Normally creating bonus to Status can be done inside addBonus call, however adding events handlers is not possible inside other function call.
	//(ShieldBonus is the only Bonus that cane have event handler so far)
	//
	//Ex (POSSIBLE):
	//status
	//..addEffect(new ShieldBonus(10))
	//
	//EX (Syntax Error)
	//status
	//..addEffect(
	//	new ShieldBonus(10)
	//	..onShieldBroaken() (unit bonusTarget) ->
	//		bonusTarget.cancelStatus(status)
	//)
	//Ex (Generally possible, but not in that context (cyclic symbol evocation (status)))
	//status
	//..addEffect(
	//	new ShieldBonus(10)
	//	..onShieldBroaken( (unit bonusTarget) -> bonusTarget.cancelStatus(status) )
	//)
	//Ex (POSSIBLE)
	//status
	//..addEffect(
	//	new ShieldBonus(10)
	//	..onShieldBroaken( (unit bonusTarget) -> print("DUPA") )
	//)